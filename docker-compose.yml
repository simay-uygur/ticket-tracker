services:
  postgres:
    image: postgres:15
    container_name: concert_postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - ticketnet

  redis:
    image: redis:7
    container_name: concert_redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - ticketnet

  springboot-backend:
    build: ./backend
    container_name: springboot-backend
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    ports:
      - "8080:8080"
    networks:
      - ticketnet

  frontend:
    build: ./frontend
    container_name: ticket-frontend
    ports:
      - "5173:80"
    networks:
      - ticketnet

  scraper:
    build: ./scraper
    container_name: concert_scraper
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    networks:
      - ticketnet

volumes:
  pgdata:

networks:
  ticketnet: